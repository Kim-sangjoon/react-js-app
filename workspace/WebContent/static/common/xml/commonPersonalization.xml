<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ev="http://www.w3.org/2001/xml-events"
    xmlns:w2="http://www.inswave.com/websquare" xmlns:xf="http://www.w3.org/2002/xforms">
    <head meta_programName="공통개인화 contextMenu" meta_programId="CMXM0006" meta_vertical_guides="370" meta_horizontal_guides="">
    	<w2:type>DEFAULT</w2:type>
        <w2:buildDate/>
        <xf:model>
        	<xf:instance>
        		<data xmlns="" />
        	</xf:instance>
        	<w2:dataCollection baseNode="map">
        		<w2:dataList baseNode="list" repeatNode="map" id="dlt_personalInfo" saveRemovedData="true">
        			<w2:columnInfo>
        				<w2:column id="intgUserId" name="유저아이디" dataType="text"></w2:column>
        				<w2:column id="pgmId" name="프로그램아이디" dataType="text"></w2:column>
        				<w2:column id="inqCondId" name="저장타입" dataType="text"></w2:column>
        				<w2:column id="inqCondKdCd" name="저장키" dataType="text"></w2:column>
        				<w2:column id="inqCondNm" name="저장라벨명" dataType="text"></w2:column>
        				<w2:column id="inqCondCntn" name="name9" dataType="text"></w2:column>
        				<w2:column id="dataInpsId" name="name8" dataType="text"></w2:column>
        				<w2:column id="dataInptPgmId" name="name10" dataType="text"></w2:column>
        				<w2:column id="dataMfpnId" name="name6" dataType="text"></w2:column>
        				<w2:column id="dataUpdPgmId" name="name7" dataType="text"></w2:column>
        			</w2:columnInfo>
        		</w2:dataList>
        	</w2:dataCollection>
        	<w2:workflowCollection></w2:workflowCollection>
        	<xf:submission abortTrigger="" action="/cmm/usbyInqCondD/v1/deleteUsbyInqCondD" customHandler="" encoding="UTF-8" errorHandler=""
        		ev:submit="" ev:submitdone="scwin.sbm_removeCondition_submitdone" ev:submiterror="" id="sbm_removeCondition" instance=""
        		mediatype="application/json" method="post" mode="asynchronous" processMsg="" ref='data:json,{"id":"dlt_personalInfo","key":"usbyInqCondDList"}' replace=""
        		target="" style="">
        	</xf:submission>
        	<xf:submission abortTrigger="" action="/cmm/usbyInqCondD/v1/createUsbyInqCondD" customHandler="" encoding="UTF-8" errorHandler=""
        		ev:submit="" ev:submitdone="scwin.sbm_personalFinal_submitdone" ev:submiterror="" id="sbm_personalFinal" instance=""
        		mediatype="application/json" method="post" mode="asynchronous" processMsg="" ref='data:json,{"id":"dlt_personalInfo","key":"usbyInqCondDList"}' replace=""
        		style="" target="">
        	</xf:submission>
        </xf:model>
        <script type="text/javascript" lazy="false"><![CDATA[

	scwin.onpageload = function() {

	};

	scwin.onpageunload = function() {

	};

	//레이어 오픈 및 개인화 목록  셋팅
	scwin.userSetInfoInit = function(btnId,grpSearchBox,scopeFrameId, pgmId){
		gen_pzList.removeAll();
		scwin.setScopeFrame(scopeFrameId);
		scwin.setGrpSearchBox(grpSearchBox.id);
		scwin.setMaxSaveCount(5); //최대 저장갯수
		scwin.btnId = btnId;
		scwin.pgmId = pgmId;

		var scopeFrame = com.util.getComponent(scopeFrameId);
		var dlObj = scopeFrame.getObj("dlt_commSearchUserInfo");


		//최종기억 설정 체크
		var btnObj = com.util.getComponent(scwin.btnId);
		var isSelectedStr = btnObj.getUserData("isSelected");
		if(com.util.isEmpty(isSelectedStr)){
			dlObj.clearFilter();
			dlObj.setColumnFilter( {type:'row', colIndex:'inqCondId', key:"final", condition:'and', "noRefresh": true});
			dlObj.setColumnFilter({type:'row', colIndex:'inqCondKdCd', key:"saveFinal", condition:'and', "noRefresh": true});


			var savefinalInfo = dlObj.getAllFilteredJSON();
			var savefinalInfoLen = savefinalInfo.length;
			if(savefinalInfoLen != 0 ){
				var isSelected = WebSquare.util.getBoolean(savefinalInfo[0].inqCondCntn);
				if(isSelected){
					btn_setMemoryChk.addClass("selected");
					btnObj.setUserData("isSelected","true")
				}else{
					btn_setMemoryChk.removeClass("selected");
					btnObj.setUserData("isSelected","false");
				}
			}else{
				btnObj.setUserData("isSelected","false");
			}
		}else{
			  var isSelected = WebSquare.util.getBoolean(isSelectedStr);
			  btn_setMemoryChk.addClass(isSelected);
		}

		dlObj.clearFilter();

		var pesDataCnt = dlObj.getRowCount();
		var pesDataArr =  dlObj.getAllJSON();
		var genIdx = 0;
		for (var jdx = 0; jdx < pesDataCnt; jdx++) {
			var inqCondId = pesDataArr[jdx].inqCondId;
			if(inqCondId =="final"){
				continue;
			}
			var cnt = dlObj.getMatchedJSON("inqCondId",inqCondId);
			var cusData = dlObj.getMatchedJSON("inqCondId",inqCondId);
				gen_pzList.insertChild( genIdx );
				var btn_searchLabel = gen_pzList.getChild( genIdx , "btn_searchLabel" ); //조회조건 라벨
				var btn_searhLabelModify = gen_pzList.getChild( genIdx , "btn_searhLabelModify" ); //조회조건 수정버튼
				var btn_searhLabelRemove = gen_pzList.getChild( genIdx , "btn_searhLabelRemove" ); //조회조건 삭제버튼
				btn_searchLabel.setValue(pesDataArr[jdx].inqCondNm);

				btn_searchLabel.setUserData("inqCondId",inqCondId);      //클릭시 조회조건 셋팅시 사용
				btn_searhLabelModify.setUserData("inqCondId",inqCondId); //수정팝업 오픈시 사용
				btn_searhLabelModify.setUserData("inqCondNm",pesDataArr[jdx].inqCondNm); //수정팝업 오픈시 사용

				btn_searhLabelRemove.setUserData("inqCondId",pesDataArr[jdx].inqCondId); //클릭시 조회조건 삭제시 사용
				genIdx++;
		}
		event.stopPropagation();
		com.win._layerHideAll();
		scwin.showLayer(btnId,grp_pzPop.id);
	};


	//그룹내 컴포넌트 값을 전역변수에 담기
	scwin.setSearchValue = function(grpObj){
		var searchValueArr = [];
		var topFrameObj = scwin.getScopeFrame();
		var scopeId ="";
		if(!com.util.isEmpty(topFrameObj)){
			var scopeId = topFrameObj.id+"_";
		}
		if(!com.util.isEmpty(grpObj)){
			var compArr = com.util.getChildren(grpObj, {
				includePlugin: "checkbox checkcombobox datePicker editor input inputCalendar multiselect radio selectbox searchbox secret textarea",
				recursive: true
		    })
			for(idx=0; idx<compArr.length; idx++){
				var compOrgId = compArr[idx].getOriginalID();
				searchValueArr.push(compOrgId +"|" + compArr[idx].getValue());
			}

			var searchValue = searchValueArr.join(",");
			return searchValue;
		}
	};

	scwin.setScopeFrame = function(scopeFrameId){
		scwin.scopeFrameId = scopeFrameId;
	};

	scwin.getScopeFrame = function(){
		return com.util.getComponent(scwin.scopeFrameId);
	};

	scwin.setGrpSearchBox = function(grpSearchBoxId){
		scwin.grpSearchBoxId = grpSearchBoxId;
	};

	scwin.getGrpSearchBox = function(){
		return com.util.getComponent(scwin.grpSearchBoxId);
	};


	scwin.setBtnObj= function(btnId){
		return scwin.btnId = btnId;
	};

	scwin.getBtnObj= function(){
		return com.util.getComponent(scwin.btnId);
	};

	//최대 저장갯수
	scwin.setMaxSaveCount = function(){
		scwin.maxCount = 5;
	};

	scwin.getMaxSaveCount = function(){
		return scwin.maxCount;
	};



	scwin.getDltObj = function(){
		var scopeFrame = scwin.getScopeFrame();
		var dlObj = scopeFrame.getObj("dlt_commSearchUserInfo");
		return dlObj;
	};


	//[조회조건저장]
	scwin.btn_sc_save_onclick = function() {
		var dltObj = scwin.getDltObj();
		var searchLabelArr = dltObj.getColumnDistinctDataArray("inqCondNm");;
		var searchKeyArr = scwin.getDltObj().getMatchedColumnData("inqCondId","custom","inqCondKdCd");


	    var listCnt = gen_pzList.getChildrenCount();
		if(scwin.getMaxSaveCount() == listCnt){
			grp_pzPop.hide();
			var alertMsg = com.data.getMessage("com.alt.0019","조회 조건 저장","5") || "조회 조건 저장은 최대 5개까지 가능합니다.";
			com.win.alert(alertMsg);
			return;
		}


		var inqCondId = dltObj.getColumnDistinctDataArray("inqCondId");

		var searchKey;
			if(inqCondId.indexOf("store_1") <0 ) {
				searchKey = "store_1";
			}else if(inqCondId.indexOf("store_2") <0){
				searchKey = "store_2";
			}else if(inqCondId.indexOf("store_3") <0) {
				searchKey = "store_3";
			}else if(inqCondId.indexOf("store_4") <0) {
				searchKey = "store_4";
			}else if(inqCondId.indexOf("store_5") <0) {
				searchKey = "store_5";
			}

		grp_pzPop.hide();
		var searchKey = searchKey; // 선택한 조건의 키값
		var scopeFrameId = scwin.getScopeFrame().id;
		var data ={"type":"insertCondition" ,"scopeFrameId":scopeFrameId,
					"searchKey" : searchKey ,
					"grpSearchBox" :scwin.getGrpSearchBox().id,
					"pgmId" : scwin.pgmId,
					"searchLabelList" :searchLabelArr.join(","), //중복확인용
		};
		var url = "/common/xml/commonPersonaliSavePopup.xml"
		var options = { id : "insertPopup",
						popupName : "조회조건 추가",
						modal : true,
						width : 369,
						height: 158,
						type : "wframePopup"
						};
		 com.win.openPopup(url, options, data);
	};

	//[조회조건명 수정]
	scwin.btn_searhLabelModify_onclick = function(e) {
		var dltObj = scwin.getDltObj();
		var searchLabelArr = dltObj.getColumnDistinctDataArray("inqCondNm");
	    var listCnt = gen_pzList.getChildrenCount();

		var inqCondId = dltObj.getColumnDistinctDataArray("inqCondId");
		var searchKey;
		if(inqCondId.indexOf("store_1") <0 ) {
			searchKey = "store_1";
		}else if(inqCondId.indexOf("store_2") <0){
			searchKey = "store_2";
		}else if(inqCondId.indexOf("store_3") <0) {
			searchKey = "store_3";
		}else if(inqCondId.indexOf("store_4") <0) {
			searchKey = "store_4";
		}else if(inqCondId.indexOf("store_5") <0) {
			searchKey = "store_5";
		}

		grp_pzPop.hide();
		var searchKey = this.getUserData("inqCondId"); // 선택한 조건의 키값
		var searchLabel = this.getUserData("inqCondNm"); // 선택한 조건의 키값
		var menuTopFrame = scwin.getScopeFrame().id;
		var data ={
					"type":"updateCondtion" , "menuTopFrame":menuTopFrame,
					"searchKey" : searchKey ,
					"searchLabel" : searchLabel ,
					"searchLabelList" :searchLabelArr.join(","), //중복확인용
					"pgmId" : scwin.pgmId,
		};
		var url = "/common/xml/commonPersonaliSavePopup.xml"
		var options = { id : "updatePopup",
						popupName : "조회조건명 변경",
						modal : true,
						width : 369,
						height: 158,
						type : "wframePopup"
						};
		 com.win.openPopup(url, options, data);
	};


	//showLayer
	scwin.showLayer = function(btnId,popId,paramStr) {
	    try {
		    	var btnObj = WebSquare.util.getComponentById(btnId);
		    	var _layerObj = WebSquare.util.getComponentById(popId);

	            var objLeft = WebSquare.style.getAbsoluteLeft(btnObj.render);
	            var objTop = WebSquare.style.getAbsoluteTop(btnObj.render) + btnObj.render.offsetHeight + 5;
	            var btnWidth = parseInt(btnObj.getStyle("width"));


	            var scrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft;
	            var scrollTop = document.documentElement.scrollTop ||document.body.scrollTop;
	            var objWidth = parseInt($("#"+_layerObj.id).css("width"));

	           _layerObj.show("block", btnObj.uuid);
	            var scrollHeight = document.documentElement.scrollHeight || document.body.scrollHeight;
	            var scrollAdjust = scrollHeight -_layerObj.render.offsetHeight;
	            if (objTop > scrollAdjust) {
	                objTop = scrollAdjust;
	            }
	            if (btnObj.options.rightAlign) {
	                objLeft = objLeft - (objWidth - btnObj.render.offsetWidth) - 23;
	                if (objLeft < 0) {
	                    objLeft = WebSquare.style.getAbsoluteLeft(btnObj.render);
	                }
	                if (objLeft + objWidth > scrollTop + (document.documentElement.clientWidth || document.body.clientWidth)) {
	                    objLeft = scrollTop + (document.documentElement.clientWidth || document.body.clientWidth) - objWidth - 23;
	                }
	            }

	            var leftPo = objLeft-objWidth+btnWidth;
	            if(leftPo<0){
					leftPo = objLeft;
	            }
	           _layerObj.setPosition(leftPo, objTop);
	            var direction = "auto";

	            if (direction== "auto") {
	                var reTop = WebSquare.style.getAbsoluteTop(btnObj.render) - scrollTop;
	                var reHeight = document.documentElement.clientHeight - (reTop + btnObj.render.offsetHeight);
	                var layerHeight =_layerObj.render.offsetHeight;
	                if (reHeight < layerHeight && reTop > layerHeight) {
	                    direction = "up";
	                }
	            }
	            if (direction == "up") {
	                objTop = WebSquare.style.getAbsoluteTop(btnObj.render) -_layerObj.render.offsetHeight - 5;
	               _layerObj.setPosition(objLeft, objTop);
	            }


	    } catch (e) {
	        WebSquare.exception.printStackTrace(e, null, btnObj);
	    }
	};
	scwin.btn_searchLabel_onclick = function() {
		var searchKey = this.getUserData("inqCondId");
		var dltObj = scwin.getDltObj();
		var cusData = dltObj.getMatchedJSON("searchKey",searchKey);
		scwin.getScopeFrame().scope.com.win.setPersonalSearchOption(searchKey);
	};


	//[삭제] 저장된 조회조건 삭제버튼을 클릭시
	scwin.btn_searhLabelRemove_onclick = function(e) {
		grp_pzPop.hide();
		var inqCondId = this.getUserData("inqCondId");
		var paramObj = {"inqCondId":inqCondId}; //콜백함수에 전달할 JOSN 형태의 파라미터 , 키값은 자유
		var options ={ //confirm의 options, 키값은 변경불가
			"callBackParam":paramObj,
		}

		com.win.confirm(com.data.getMessage("com.cfm.0003"), "scwin.removeConfirmCallback",options);
	};

	//저장된 조회조건을 삭제하시겠습니까? 네 클릭시
	scwin.removeConfirmCallback = function(params){
		if(params.clickValue){
			var searchKey = params.inqCondId;
			scwin.removePersonal(searchKey);
		}
	}

	//저장된 조회조건을 삭제
	scwin.removePersonal = function(inqCondId , code){

		var loginInfo =com.win.getUserLoginInfo();
		var intgUserId = loginInfo.intgUserId;
		if (!com.util.isEmpty(intgUserId )) {
			dlt_personalInfo.removeAll();
			var inqCondKdCd = code || "null";
			var updateData = [{
				    "intgUserId":intgUserId,
				    "pgmId":scwin.pgmId,
				    "inqCondId":inqCondId,
				    "inqCondKdCd" :inqCondKdCd,
				}
			]
			dlt_personalInfo.setJSON(updateData)
			com.sbm.execute(sbm_removeCondition);
		}

	};

	//최종설정기억저장이 완료되면 개인화 재조회하여 최신화함
	scwin.sbm_removeCondition_submitdone = function(e) {
		var menuTopFrameObj = scwin.getScopeFrame();
		if(!com.util.isEmpty(menuTopFrameObj)){
			var sbmObj =  menuTopFrameObj.getObj("sbm_personalizatonSearch");
			if(!com.util.isEmpty(sbmObj)){
				menuTopFrameObj.scope.com.sbm.execute(sbmObj);
			}
		}
	};

	//[최종설정기억] 최종설정기억값과 최종설정기억 체크값 저장
	scwin.btn_setMemoryChk_onclick = function() {
		btn_setMemoryChk.toggleClass("selected");
		var btnObj = com.util.getComponent(scwin.btnId);
		var grpBox = scwin.getGrpSearchBox();
		var searchValue = scwin.setSearchValue(grpBox);

		btnObj.setUserData("isSelected","false");

		var loginInfo =com.win.getUserLoginInfo();
		var intgUserId = loginInfo.intgUserId;
		if (!com.util.isEmpty(intgUserId )) {
			if(this.hasClass("selected")){
					var updateData = [{
					    "intgUserId":intgUserId,
					    "pgmId":scwin.pgmId,
					    "inqCondId":"final",
					    "inqCondKdCd" :"streValue",
					    "inqCondNm":"최종설정기억",
					    "inqCondCntn":searchValue,
						"dataInpsId":"SYS000",
					    "dataInptPgmId":"system2",
					    "dataMfpnId":"SYS000",
					    "dataUpdPgmId":"system2"
					},{
					    "intgUserId":intgUserId,
					    "pgmId":scwin.pgmId,
					    "inqCondId":"final",
					    "inqCondKdCd" :"saveFinal",
					    "inqCondNm":"최종설정기억",
					    "inqCondCntn":"true",
						"dataInpsId":"SYS000",
					    "dataInptPgmId":"system2",
					    "dataMfpnId":"SYS000",
					    "dataUpdPgmId":"system2"
					}
				]

				dlt_personalInfo.setJSON(updateData)
				com.sbm.execute(sbm_personalFinal);

			}else{
				scwin.removePersonal("final");
			}

		}

	};

	//최종설정기억저장이 완료되면 개인화 재조회하여 최신화함
	scwin.sbm_personalFinal_submitdone = function(e) {
		var scopeFrameObj = scwin.getScopeFrame();
		if(!com.util.isEmpty(scopeFrameObj)){
			var sbmObj =  scopeFrameObj.getObj("sbm_personalizatonSearch");
			if(!com.util.isEmpty(sbmObj)){
				scopeFrameObj.scope.com.sbm.execute(sbmObj);
			}
		}
	};


	//화면에서 조회버튼 클릭시 com.win.finalSearchSave를 호출하면 최종설정기억을 저장하기 위해 해당함수를 호출함
	scwin.finalSearchSave = function(grpSearchBox,pgmId){
		var searchValue =  scwin.setSearchValue(grpSearchBox);

		var loginInfo = com.win.getUserLoginInfo();
		var intgUserId = loginInfo.intgUserId;
		if (!com.util.isEmpty(intgUserId )) {
			var updateData = [{
			    "intgUserId":intgUserId,
			    "pgmId":pgmId,
			    "inqCondId":"final",
			    "inqCondKdCd" :"streValue",
			    "inqCondNm":"최종설정기억",
			    "inqCondCntn":searchValue,
				"dataInpsId":"SYS000",
			    "dataInptPgmId":"system2",
			    "dataMfpnId":"SYS000",
			    "dataUpdPgmId":"system2"
			}
		]
			dlt_personalInfo.setJSON(updateData)
			com.sbm.execute(sbm_personalFinal);
		}
	};]]></script>
    </head>
    <body ev:onpageload="scwin.onpageload" ev:onpageunload="scwin.onpageunload">
    	<xf:group id="grp_pzPop" class="pz_pop" style="z-index: 6110;display: none;">
    		<xf:group id="" class="pz_head" tagname="ul">
    			<xf:group id="" tagname="li">
    				<w2:anchor id="btn_setMemoryChk" outerDiv="false" style="" class="btn_set_memory" ev:onclick="scwin.btn_setMemoryChk_onclick">
    					<xf:label><![CDATA[최종설정기억]]></xf:label>
    				</w2:anchor>
    			</xf:group>
    			<xf:group id="" tagname="li" ev:onclick="">
    				<w2:anchor id="btn_sc_save" outerDiv="false" style="" class="btn_sc_save" ev:onclick="scwin.btn_sc_save_onclick">
    					<xf:label><![CDATA[조회조건저장]]></xf:label>
    				</w2:anchor>
    			</xf:group>
    		</xf:group>
    		<w2:generator style="" id="gen_pzList" class="pz_list" tagname="ul"><xf:group id="" tagname="li">
    				<w2:anchor outerDiv="false" style="" id="btn_searchLabel" ev:onclick="scwin.btn_searchLabel_onclick">
    					<xf:label><![CDATA[조회조건1]]></xf:label>
    				</w2:anchor>
    				<xf:trigger class="btn_pz_edit" id="btn_searhLabelModify" style="" type="button" ev:onclick="scwin.btn_searhLabelModify_onclick">
    					<xf:label><![CDATA[편집]]></xf:label>
    				</xf:trigger>
    				<xf:trigger class="btn_pz_del" id="btn_searhLabelRemove" style="" type="button" ev:onclick="scwin.btn_searhLabelRemove_onclick">
    					<xf:label><![CDATA[삭제]]></xf:label>
    				</xf:trigger>
    			</xf:group></w2:generator>
    	</xf:group>

    </body>
</html>
