<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ev="http://www.w3.org/2001/xml-events"
    xmlns:w2="http://www.inswave.com/websquare" xmlns:xf="http://www.w3.org/2002/xforms">
   	<head meta_programName="프로그램 화면 공통 헤더" meta_programId="CMXM0001">
		<w2:type>DEFAULT</w2:type>
		<w2:buildDate />
		<xf:model>
			<xf:instance>
				<data xmlns="" />
			</xf:instance>
			<w2:dataCollection baseNode="map">
			</w2:dataCollection>
		</xf:model>
		<script type="text/javascript" lazy="false"><![CDATA[
	scwin.onpageload = function() {
		var menuNm = $p.parent().com.data._getMetaInfo("menuNm");
		var location ="";
		if (com.util.isEmpty(menuNm) === false) {
			tbx_title.setValue(menuNm);
		} else {
			var frame = $p.getFrame();
			if (!com.util.isEmpty(frame)) {
				var pFrame = frame.getParentFrame();
				var pParentFrm = pFrame.getParentFrame();
				if (!com.util.isEmpty(pParentFrm)) {
					var parentCom  = pParentFrm.getObj("com");
					if(!com.util.isEmpty(parentCom)) {
						var menuInfo = parentCom.data.getParameter("_menuInfo");
						if (!com.util.isEmpty(menuInfo)) {
							if (!com.util.isEmpty(menuInfo.menuNm)) {
								menuNm = menuInfo.menuNm;
								tbx_title.setValue(menuNm);
							}
							if ( !com.util.isEmpty(menuInfo.location)) {
								location = menuInfo.location;
								tbx_location.setValue(location);
							}
						}
					}
				}
			}
		}

		if(com.util.isEmpty(menuNm)) {
			tbx_title.setValue($p.parent().$p.getMetaValue("meta_programName"));
		}

		if(com.util.isEmpty(location)) {
			tbx_location.setValue($p.parent().com.data._getMetaInfo("location"));
		}

		scwin.initFavBtn();
		scwin.setPageContetScrollEvent();
	};

	scwin.onpageunload = function() {

	};

	scwin.btn_reload_onclick = function(e) {
		var srcPath = $p.parent().com.data._getMetaInfo("srcPath");
		var param = $p.parent().com.data.getParameter();

		var option = {
			dataObject : {
				type : "json",
				name : "param",
				data : param
			}
		};

		$p.parent().$p.getFrame().setSrc(srcPath, option);
	};

	//화면 로딩시 즐겨찾기 버튼 표시
	scwin.initFavBtn = function() {
		try {
			var menuFrame = com.win._getMenuTopFrame();
			if (!com.util.isEmpty(menuFrame)) {
				var menuCom = menuFrame.getObj("com");
				var menuId = menuCom.win.getMenuId();
				var topScwin = $p.top().scwin;
				if(!com.util.isEmpty(topScwin) && typeof topScwin.isFavList === "function"){
					var isOn = topScwin.isFavList(menuId); // 즐겨찾기 목록에 있는지 확인
					if (isOn) {
						btn_fav.addClass("on");
					} else {
						btn_fav.removeClass("on");
					}
				}else if(typeof scwin.isFavList == "function"){
					var isOn = scwin.isFavList(menuId); // 즐겨찾기 목록에 있는지 확인
					if (isOn) {
						btn_fav.addClass("on");
					} else {
						btn_fav.removeClass("on");
					}
				}
			}

		} catch (ex) {
			console.error(ex);
		}
	};


	scwin.setPageContetScrollEvent = function () {
		var titleFrame = $p.getFrame();
		if (!com.util.isEmpty(titleFrame) && !com.util.isEmpty(titleFrame.id) ) {
			var contentsFrameEl = $("#" +titleFrame.id).next();
			if (contentsFrameEl.length > 0 && !com.util.isEmpty(contentsFrameEl[0].id)) {
				scwin.pageContents = com.util.getComponent(contentsFrameEl[0].id);
				if (!com.util.isEmpty(scwin.pageContents) && scwin.pageContents.hasClass("page_contents")) {
					scwin.pageContents.bind("onscroll" ,function (e) {
						var scrollTop =$(this.render).scrollTop();
						if(scrollTop == 0){
							btn_scrollTop.removeClass("on");
						} else {
							btn_scrollTop.addClass("on");
						}
					})
				}
			}
		}
	};

	//즐겨찾기 버튼 클릭
	scwin.btn_fav_onclick = function(e) {
		try{
			this.toggleClass("on");
			this.hasClass("on");
			var isOn =this.hasClass("on");
			scwin.updateFav(isOn);

		}catch(ex){
			console.error(ex);
		}

	};

	//즐겨찾기 추가 삭제
	scwin.updateFav = function(isOn) {
		try {
			var menuFrame = com.win._getMenuTopFrame();
			if (!com.util.isEmpty(menuFrame)) {
				var menuCom = menuFrame.getObj("com");
				var menuId = menuCom.win.getMenuId();
				var topScwin = $p.top().scwin;
				$p.top().scwin.updateFavList(menuId, isOn); // main.js에서 호출
			}
		} catch (ex) {
			console.error(ex);
		}
	}

	//page content 영역의 크롤 0이 아닌 경우 top버튼을 노출하는 스크롤 이벤트를 부여한다.
	scwin.setPageContetScrollEvent = function () {
		var titleFrame = $p.getFrame();
		if (!com.util.isEmpty(titleFrame) && !com.util.isEmpty(titleFrame.id) ) {
			var contentsFrameEl = $("#" +titleFrame.id).next();
			if (contentsFrameEl.length > 0 && !com.util.isEmpty(contentsFrameEl[0].id)) {
				scwin.pageContents = com.util.getComponent(contentsFrameEl[0].id);
				if (!com.util.isEmpty(scwin.pageContents) && scwin.pageContents.hasClass("page_contents")) {
					scwin.pageContents.bind("onscroll" ,function (e) {

						var scrollTop =$(this.render).scrollTop();
						if(scrollTop == 0){
							btn_scrollTop.removeClass("on");
						} else {
							btn_scrollTop.addClass("on");
						}
					})
				}
			}
		}
	};

	//콘텐츠 영역 scrollTop 0으로 이동
	scwin.btn_scrollTop_onclick = function(e) {
		if (!com.util.isEmpty(scwin.pageContents)) {
			com.win.setScrollTop(0,scwin.pageContents );
		}
	};
	]]></script>
	</head>
	<body ev:onpageload="scwin.onpageload" ev:onpageunload="scwin.onpageunload">
	<xf:group id="" style="" class="page_header_inner">
		<xf:group id="" style="" class="lta">
			<xf:trigger class="btn_fav" id="btn_fav" style="" toolTip="" type="button" ev:onclick="scwin.btn_fav_onclick">
				<xf:label></xf:label>
			</xf:trigger>
			<w2:textbox id="tbx_title" style="" class="" label="화면타이틀" tagname="h2"></w2:textbox>
		</xf:group>
		<xf:group id="" style="" class="rta">
			<xf:trigger class="btn_hd fs_up" ev:onclick="" id="" style="" toolTip="" type="button">
				<xf:label></xf:label>
			</xf:trigger>
			<xf:trigger class="btn_hd fs_down" ev:onclick="" id="" style="" toolTip="" type="button">
				<xf:label></xf:label>
			</xf:trigger>
			<xf:trigger type="button" style="" id="btn_reload" class="btn_hd reload" toolTip="" ev:onclick="scwin.btn_reload_onclick">
				<xf:label><![CDATA[]]></xf:label>
			</xf:trigger>

			<xf:trigger class="btn_hd key" ev:onclick="" id="" style="" toolTip="" type="button">
				<xf:label></xf:label>
			</xf:trigger>
			<xf:trigger class="btn_hd dual" ev:onclick="" id="" style="" toolTip="" type="button">
				<xf:label></xf:label>
			</xf:trigger>
			<xf:trigger class="btn_hd close" ev:onclick="" id="" style="" toolTip="" type="button">
				<xf:label></xf:label>
			</xf:trigger>
			<xf:trigger class="btn_pgup" ev:onclick="scwin.btn_scrollTop_onclick" id="btn_scrollTop" style="" toolTip="" type="button">
				<xf:label><![CDATA[TOP]]></xf:label>
			</xf:trigger>

		</xf:group>


	</xf:group></body>
</html>
