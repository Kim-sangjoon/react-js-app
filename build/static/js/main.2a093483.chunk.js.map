{"version":3,"sources":["App.js","index.js"],"names":["ThemingLayout","Container","style","marginTop","Header","as","dividing","Grid","columns","stackable","Column","href","title","centered","padded","margin","width","textAlign","color","height","doubling","Menu","items","key","name","content","pointing","secondary","tabular","position","Button","primary","basic","compact","Divider","icon","labelPosition","Group","animated","Content","visible","hidden","disabled","loading","Or","attached","widths","Segment","Image","src","size","marginBottom","inverted","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"8QAuReA,EApRO,kBACpB,kBAACC,EAAA,EAAD,CAAWC,MAAO,CAAEC,UAAW,QAC7B,kBAACC,EAAA,EAAD,CAAQC,GAAG,MAAX,eAEA,kBAACD,EAAA,EAAD,CAAQC,GAAG,KAAKC,UAAQ,GAAxB,QAIA,kBAACC,EAAA,EAAD,CAAMC,QAAS,EAAGC,WAAS,GACzB,kBAACF,EAAA,EAAKG,OAAN,KACE,kBAACN,EAAA,EAAD,CAAQC,GAAG,MAAX,aACA,kBAACD,EAAA,EAAD,CAAQC,GAAG,MAAX,aACA,kBAACD,EAAA,EAAD,CAAQC,GAAG,MAAX,aACA,kBAACD,EAAA,EAAD,CAAQC,GAAG,MAAX,aACA,kBAACD,EAAA,EAAD,CAAQC,GAAG,MAAX,aAEA,uNAOF,kBAACE,EAAA,EAAKG,OAAN,KACE,kBAACN,EAAA,EAAD,CAAQC,GAAG,MAAX,qBAEA,qDACyB,uBAAGM,KAAK,KAAR,sBADzB,kJAKA,2BACE,2FAEF,+DACmC,yDADnC,KAGA,+DACmC,2DADnC,KAGA,uEAC2C,0BAAMC,MAAM,aAAZ,QAD3C,MAKF,kBAACL,EAAA,EAAKG,OAAN,KACE,kBAACH,EAAA,EAAD,CACEM,UAAQ,EACRL,QAAS,EACTM,QAAM,EACNL,WAAS,EACTP,MAAO,CAAEa,OAAQ,SAAUC,MAAO,KAClCC,UAAU,UAEV,kBAACV,EAAA,EAAKG,OAAN,CAAaQ,MAAM,MAAMhB,MAAO,CAAEa,OAAQ,QAASI,OAAQ,KAA3D,OAGA,kBAACZ,EAAA,EAAKG,OAAN,CAAaQ,MAAM,SAAShB,MAAO,CAAEa,OAAQ,QAASI,OAAQ,KAA9D,UAGA,kBAACZ,EAAA,EAAKG,OAAN,CAAaQ,MAAM,SAAShB,MAAO,CAAEa,OAAQ,QAASI,OAAQ,KAA9D,UAGA,kBAACZ,EAAA,EAAKG,OAAN,CAAaQ,MAAM,QAAQhB,MAAO,CAAEa,OAAQ,QAASI,OAAQ,KAA7D,SAGA,kBAACZ,EAAA,EAAKG,OAAN,CAAaQ,MAAM,QAAQhB,MAAO,CAAEa,OAAQ,QAASI,OAAQ,KAA7D,SAGA,kBAACZ,EAAA,EAAKG,OAAN,CAAaQ,MAAM,OAAOhB,MAAO,CAAEa,OAAQ,QAASI,OAAQ,KAA5D,QAGA,kBAACZ,EAAA,EAAKG,OAAN,CAAaQ,MAAM,OAAOhB,MAAO,CAAEa,OAAQ,QAASI,OAAQ,KAA5D,QAGA,kBAACZ,EAAA,EAAKG,OAAN,CAAaQ,MAAM,SAAShB,MAAO,CAAEa,OAAQ,QAASI,OAAQ,KAA9D,UAGA,kBAACZ,EAAA,EAAKG,OAAN,CAAaQ,MAAM,SAAShB,MAAO,CAAEa,OAAQ,QAASI,OAAQ,KAA9D,UAGA,kBAACZ,EAAA,EAAKG,OAAN,CAAaQ,MAAM,OAAOhB,MAAO,CAAEa,OAAQ,QAASI,OAAQ,KAA5D,QAGA,kBAACZ,EAAA,EAAKG,OAAN,CAAaQ,MAAM,QAAQhB,MAAO,CAAEa,OAAQ,QAASI,OAAQ,KAA7D,SAGA,kBAACZ,EAAA,EAAKG,OAAN,CAAaQ,MAAM,OAAOhB,MAAO,CAAEa,OAAQ,QAASI,OAAQ,KAA5D,QAGA,kBAACZ,EAAA,EAAKG,OAAN,CAAaQ,MAAM,QAAQhB,MAAO,CAAEa,OAAQ,QAASI,OAAQ,KAA7D,YAON,kBAACf,EAAA,EAAD,CAAQC,GAAG,KAAKC,UAAQ,GAAxB,QAIA,kBAACC,EAAA,EAAD,CAAMC,QAAS,EAAGY,UAAQ,GACxB,kBAACb,EAAA,EAAKG,OAAN,KACE,kBAACW,EAAA,EAAD,CACEC,MAAO,CACL,CAAEC,IAAK,IAAKC,KAAM,SAAUC,QAAS,QACrC,CAAEF,IAAK,IAAKC,KAAM,SAAUC,QAAS,QACrC,CAAEF,IAAK,IAAKC,KAAM,SAAUC,QAAS,SAEvCC,UAAQ,EACRC,WAAS,KAIb,kBAACpB,EAAA,EAAKG,OAAN,KACE,kBAACW,EAAA,EAAD,CACEC,MAAO,CACL,CAAEC,IAAK,IAAKC,KAAM,SAAUC,QAAS,QACrC,CAAEF,IAAK,IAAKC,KAAM,SAAUC,QAAS,QACrC,CAAEF,IAAK,IAAKC,KAAM,SAAUC,QAAS,SAEvCC,UAAQ,EACRE,SAAO,KAIX,kBAACrB,EAAA,EAAKG,OAAN,KACE,kBAACW,EAAA,EAAD,CACEC,MAAO,CACL,CAAEC,IAAK,KAAMC,KAAM,SAAUC,QAAS,QACtC,CAAEF,IAAK,KAAMC,KAAM,SAAUC,QAAS,QACtC,CAAEF,IAAK,KAAMC,KAAM,SAAUC,QAAS,aAAcI,SAAU,UAEhEH,UAAQ,MAKd,kBAACtB,EAAA,EAAD,CAAQC,GAAG,KAAKC,UAAQ,GAAxB,WAIA,kBAACC,EAAA,EAAD,CAAMC,QAAQ,SACZ,kBAACD,EAAA,EAAKG,OAAN,KACE,kBAACoB,EAAA,EAAD,gBACA,kBAACA,EAAA,EAAD,CAAQC,SAAO,GAAf,WACA,kBAACD,EAAA,EAAD,CAAQH,WAAS,GAAjB,aACA,kBAACG,EAAA,EAAD,CAAQE,OAAK,GAAb,SACA,kBAACF,EAAA,EAAD,CAAQG,SAAO,GAAf,WAEA,kBAACC,EAAA,EAAD,MAEA,kBAACJ,EAAA,EAAD,CAAQK,KAAK,UACb,kBAACL,EAAA,EAAD,CAAQL,QAAQ,UAAUU,KAAK,QAAQC,cAAc,SACrD,kBAACN,EAAA,EAAD,CAAQL,QAAQ,UAAUU,KAAK,QAAQC,cAAc,UAErD,kBAACF,EAAA,EAAD,MAEA,kBAACJ,EAAA,EAAOO,MAAR,KACE,kBAACP,EAAA,EAAD,eAGF,kBAACI,EAAA,EAAD,MAEA,kBAACJ,EAAA,EAAD,CAAQQ,UAAQ,GACd,kBAACR,EAAA,EAAOS,QAAR,CAAgBC,SAAO,GAAvB,cACA,kBAACV,EAAA,EAAOS,QAAR,CAAgBE,QAAM,GAAtB,WAEF,kBAACX,EAAA,EAAD,CAAQQ,SAAS,YACf,kBAACR,EAAA,EAAOS,QAAR,CAAgBC,SAAO,GAAvB,YACA,kBAACV,EAAA,EAAOS,QAAR,CAAgBE,QAAM,GAAtB,WAEF,kBAACX,EAAA,EAAD,CAAQQ,SAAS,QACf,kBAACR,EAAA,EAAOS,QAAR,CAAgBC,SAAO,GAAvB,WACA,kBAACV,EAAA,EAAOS,QAAR,CAAgBE,QAAM,GAAtB,WAGF,kBAACP,EAAA,EAAD,MAEA,kBAACJ,EAAA,EAAD,CAAQY,UAAQ,GAAhB,YACA,kBAACZ,EAAA,EAAD,CAAQa,SAAO,GAAf,WAEA,kBAACT,EAAA,EAAD,MAEA,kBAACJ,EAAA,EAAOO,MAAR,KACE,kBAACP,EAAA,EAAD,UACA,kBAACA,EAAA,EAAD,UACA,kBAACA,EAAA,EAAD,WAGF,kBAACA,EAAA,EAAOO,MAAR,KACE,kBAACP,EAAA,EAAD,CAAQK,KAAK,eACb,kBAACL,EAAA,EAAD,CAAQK,KAAK,iBACb,kBAACL,EAAA,EAAD,CAAQK,KAAK,gBACb,kBAACL,EAAA,EAAD,CAAQK,KAAK,mBAGf,kBAACL,EAAA,EAAOO,MAAR,KACE,kBAACP,EAAA,EAAD,UACA,kBAACA,EAAA,EAAOc,GAAR,MACA,kBAACd,EAAA,EAAD,WAGF,kBAACI,EAAA,EAAD,MAEA,kBAACJ,EAAA,EAAOO,MAAR,CAAcQ,SAAS,MAAMC,OAAQ,GACnC,kBAAChB,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,aAEF,kBAACiB,EAAA,EAAD,CAASF,UAAQ,GACf,kBAACG,EAAA,EAAD,CAAOC,IAAI,qCAEb,kBAACnB,EAAA,EAAOO,MAAR,CAAcQ,SAAS,SAASC,OAAQ,GACtC,kBAAChB,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,cAIJ,kBAACvB,EAAA,EAAKG,OAAN,KACE,kBAACoB,EAAA,EAAD,CAAQoB,KAAK,QAAb,QACA,kBAACpB,EAAA,EAAD,CAAQoB,KAAK,QAAb,QACA,kBAACpB,EAAA,EAAD,CAAQoB,KAAK,SAAb,SACA,kBAACpB,EAAA,EAAD,CAAQoB,KAAK,SAAb,SACA,kBAACpB,EAAA,EAAD,CAAQoB,KAAK,OAAb,OACA,kBAACpB,EAAA,EAAD,CAAQoB,KAAK,QAAb,QACA,kBAACpB,EAAA,EAAD,CAAQoB,KAAK,WAAb,WAEA,kBAAChB,EAAA,EAAD,MAEA,kBAACJ,EAAA,EAAD,CAAQZ,MAAM,SAAShB,MAAO,CAAEiD,aAAc,QAA9C,UAGA,kBAACrB,EAAA,EAAD,CAAQZ,MAAM,SAAShB,MAAO,CAAEiD,aAAc,QAA9C,UAGA,kBAACrB,EAAA,EAAD,CAAQZ,MAAM,QAAQhB,MAAO,CAAEiD,aAAc,QAA7C,SAGA,kBAACrB,EAAA,EAAD,CAAQZ,MAAM,OAAOhB,MAAO,CAAEiD,aAAc,QAA5C,QAGA,kBAACrB,EAAA,EAAD,CAAQZ,MAAM,OAAOhB,MAAO,CAAEiD,aAAc,QAA5C,QAGA,kBAACrB,EAAA,EAAD,CAAQZ,MAAM,SAAShB,MAAO,CAAEiD,aAAc,QAA9C,UAGA,kBAACrB,EAAA,EAAD,CAAQZ,MAAM,OAAOhB,MAAO,CAAEiD,aAAc,QAA5C,QAGA,kBAACrB,EAAA,EAAD,CAAQZ,MAAM,MAAMhB,MAAO,CAAEiD,aAAc,QAA3C,OAGA,kBAACrB,EAAA,EAAD,CAAQZ,MAAM,QAAQhB,MAAO,CAAEiD,aAAc,QAA7C,SAIA,kBAACjB,EAAA,EAAD,MAEA,kBAACa,EAAA,EAAD,CAASK,UAAQ,GACf,kBAACtB,EAAA,EAAD,CAAQsB,UAAQ,GAAhB,YACA,kBAACtB,EAAA,EAAD,CAAQE,OAAK,EAACoB,UAAQ,GAAtB,SAGA,kBAACtB,EAAA,EAAD,CAAQZ,MAAM,OAAOkC,UAAQ,GAA7B,WAGA,kBAACtB,EAAA,EAAD,CAAQE,OAAK,EAACd,MAAM,OAAOkC,UAAQ,GAAnC,sB,OCzQVC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2a093483.chunk.js","sourcesContent":["import React from 'react'\nimport { Button, Container, Divider, Grid, Header, Image, Menu, Segment } from 'semantic-ui-react'\n\nconst ThemingLayout = () => (\n  <Container style={{ marginTop: '3em' }}>\n    <Header as='h1'>Github test</Header>\n\n    <Header as='h2' dividing>\n      Site\n    </Header>\n\n    <Grid columns={3} stackable>\n      <Grid.Column>\n        <Header as='h1'>Heading 1</Header>\n        <Header as='h2'>Heading 2</Header>\n        <Header as='h3'>Heading 3</Header>\n        <Header as='h4'>Heading 4</Header>\n        <Header as='h5'>Heading 5</Header>\n\n        <p>\n          Nullam quis risus eget urna mollis ornare vel eu leo. Cum sociis natoque penatibus et\n          magnis dis parturient montes, nascetur ridiculus mus. Nullam id dolor id nibh ultricies\n          vehicula.\n        </p>\n      </Grid.Column>\n\n      <Grid.Column>\n        <Header as='h2'>Example body text</Header>\n\n        <p>\n          Nullam quis risus eget <a href='#'>urna mollis ornare</a> vel eu leo. Cum sociis natoque\n          penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nullam id dolor id nibh\n          ultricies vehicula.\n        </p>\n        <p>\n          <small>This line of text is meant to be treated as fine print.</small>\n        </p>\n        <p>\n          The following snippet of text is <strong>rendered as bold text</strong>.\n        </p>\n        <p>\n          The following snippet of text is <em>rendered as italicized text</em>.\n        </p>\n        <p>\n          An abbreviation of the word attribute is <abbr title='attribute'>attr</abbr>.\n        </p>\n      </Grid.Column>\n\n      <Grid.Column>\n        <Grid\n          centered\n          columns={3}\n          padded\n          stackable\n          style={{ margin: '-1.5em', width: 400 }}\n          textAlign='center'\n        >\n          <Grid.Column color='red' style={{ margin: '0.5em', height: 50 }}>\n            Red\n          </Grid.Column>\n          <Grid.Column color='orange' style={{ margin: '0.5em', height: 50 }}>\n            Orange\n          </Grid.Column>\n          <Grid.Column color='yellow' style={{ margin: '0.5em', height: 50 }}>\n            Yellow\n          </Grid.Column>\n          <Grid.Column color='olive' style={{ margin: '0.5em', height: 50 }}>\n            Olive\n          </Grid.Column>\n          <Grid.Column color='green' style={{ margin: '0.5em', height: 50 }}>\n            Green\n          </Grid.Column>\n          <Grid.Column color='teal' style={{ margin: '0.5em', height: 50 }}>\n            Teal\n          </Grid.Column>\n          <Grid.Column color='blue' style={{ margin: '0.5em', height: 50 }}>\n            Blue\n          </Grid.Column>\n          <Grid.Column color='violet' style={{ margin: '0.5em', height: 50 }}>\n            Violet\n          </Grid.Column>\n          <Grid.Column color='purple' style={{ margin: '0.5em', height: 50 }}>\n            Purple\n          </Grid.Column>\n          <Grid.Column color='pink' style={{ margin: '0.5em', height: 50 }}>\n            Pink\n          </Grid.Column>\n          <Grid.Column color='brown' style={{ margin: '0.5em', height: 50 }}>\n            Brown\n          </Grid.Column>\n          <Grid.Column color='grey' style={{ margin: '0.5em', height: 50 }}>\n            Grey\n          </Grid.Column>\n          <Grid.Column color='black' style={{ margin: '0.5em', height: 50 }}>\n            Black\n          </Grid.Column>\n        </Grid>\n      </Grid.Column>\n    </Grid>\n\n    <Header as='h2' dividing>\n      Menu\n    </Header>\n\n    <Grid columns={3} doubling>\n      <Grid.Column>\n        <Menu\n          items={[\n            { key: '1', name: 'link-1', content: 'Link' },\n            { key: '2', name: 'link-2', content: 'Link' },\n            { key: '3', name: 'link-3', content: 'Link' },\n          ]}\n          pointing\n          secondary\n        />\n      </Grid.Column>\n\n      <Grid.Column>\n        <Menu\n          items={[\n            { key: '1', name: 'link-1', content: 'Link' },\n            { key: '2', name: 'link-2', content: 'Link' },\n            { key: '3', name: 'link-3', content: 'Link' },\n          ]}\n          pointing\n          tabular\n        />\n      </Grid.Column>\n\n      <Grid.Column>\n        <Menu\n          items={[\n            { key: 'l1', name: 'link-1', content: 'Link' },\n            { key: 'l2', name: 'link-2', content: 'Link' },\n            { key: 't1', name: 'text-1', content: 'Right text', position: 'right' },\n          ]}\n          pointing\n        />\n      </Grid.Column>\n    </Grid>\n\n    <Header as='h2' dividing>\n      Buttons\n    </Header>\n\n    <Grid columns='equal'>\n      <Grid.Column>\n        <Button>Default</Button>\n        <Button primary>Primary</Button>\n        <Button secondary>Secondary</Button>\n        <Button basic>Basic</Button>\n        <Button compact>Compact</Button>\n\n        <Divider />\n\n        <Button icon='heart' />\n        <Button content='Labeled' icon='heart' labelPosition='left' />\n        <Button content='Labeled' icon='heart' labelPosition='right' />\n\n        <Divider />\n\n        <Button.Group>\n          <Button>Combo</Button>\n        </Button.Group>\n\n        <Divider />\n\n        <Button animated>\n          <Button.Content visible>Horizontal</Button.Content>\n          <Button.Content hidden>Hidden</Button.Content>\n        </Button>\n        <Button animated='vertical'>\n          <Button.Content visible>Vertical</Button.Content>\n          <Button.Content hidden>Hidden</Button.Content>\n        </Button>\n        <Button animated='fade'>\n          <Button.Content visible>Fade In</Button.Content>\n          <Button.Content hidden>Hidden</Button.Content>\n        </Button>\n\n        <Divider />\n\n        <Button disabled>Disabled</Button>\n        <Button loading>Loading</Button>\n\n        <Divider />\n\n        <Button.Group>\n          <Button>1</Button>\n          <Button>2</Button>\n          <Button>3</Button>\n        </Button.Group>\n\n        <Button.Group>\n          <Button icon='align left' />\n          <Button icon='align center' />\n          <Button icon='align right' />\n          <Button icon='align justify' />\n        </Button.Group>\n\n        <Button.Group>\n          <Button>1</Button>\n          <Button.Or />\n          <Button>2</Button>\n        </Button.Group>\n\n        <Divider />\n\n        <Button.Group attached='top' widths={2}>\n          <Button>One</Button>\n          <Button>Two</Button>\n        </Button.Group>\n        <Segment attached>\n          <Image src='/images/wireframe/paragraph.png' />\n        </Segment>\n        <Button.Group attached='bottom' widths={2}>\n          <Button>One</Button>\n          <Button>Two</Button>\n        </Button.Group>\n      </Grid.Column>\n\n      <Grid.Column>\n        <Button size='mini'>Mini</Button>\n        <Button size='tiny'>Tiny</Button>\n        <Button size='small'>Small</Button>\n        <Button size='large'>Large</Button>\n        <Button size='big'>Big</Button>\n        <Button size='huge'>Huge</Button>\n        <Button size='massive'>Massive</Button>\n\n        <Divider />\n\n        <Button color='yellow' style={{ marginBottom: '1em' }}>\n          Yellow\n        </Button>\n        <Button color='orange' style={{ marginBottom: '1em' }}>\n          Orange\n        </Button>\n        <Button color='green' style={{ marginBottom: '1em' }}>\n          Green\n        </Button>\n        <Button color='teal' style={{ marginBottom: '1em' }}>\n          Teal\n        </Button>\n        <Button color='blue' style={{ marginBottom: '1em' }}>\n          Blue\n        </Button>\n        <Button color='purple' style={{ marginBottom: '1em' }}>\n          Purple\n        </Button>\n        <Button color='pink' style={{ marginBottom: '1em' }}>\n          Pink\n        </Button>\n        <Button color='red' style={{ marginBottom: '1em' }}>\n          Red\n        </Button>\n        <Button color='black' style={{ marginBottom: '1em' }}>\n          Black\n        </Button>\n\n        <Divider />\n\n        <Segment inverted>\n          <Button inverted>Inverted</Button>\n          <Button basic inverted>\n            Basic\n          </Button>\n          <Button color='blue' inverted>\n            Colored\n          </Button>\n          <Button basic color='blue' inverted>\n            Basic Colored\n          </Button>\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  </Container>\n)\n\nexport default ThemingLayout","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}